{"version":3,"sources":["CircularProgressBar.js","Timer.js","App.js","index.js"],"names":["CircularProgressBar","props","state","restartFlag","restartAnimation","bind","this","setState","progressBar","document","getElementById","oldWrapper","RightSpin","LeftSpin","parentElement","removeChild","appendChild","newWrapper","cssLeftSpin","animationDuration","countDownTime","animationPlayState","progressBarEnabled","cssRightSpin","animationDelay","cssWrapper","cssCircularProgressBar","transform","progressBarSize","id","className","style","part","React","Component","Timer","seconds","minutes","timerEnabled","timerIntervalID","toggleTimer","restartTimer","startTimer","setInterval","console","log","clearInterval","time","App","timerEnabledToggle","timerReset","e","target","classList","remove","add","totalSeconds","onClick","ReactDOM","render"],"mappings":"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","file":"static/js/main.38486793.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CircularProgressBar.css';\r\n\r\nclass CircularProgressBar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\trestartFlag : this.props.restartFlag\r\n\t\t};\r\n\t\tthis.restartAnimation = this.restartAnimation.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidUpdate() {\r\n\t\tif(!this.state.restartFlag && this.props.restartFlag) {\r\n\t\t\tthis.setState({\r\n\t\t\t\trestartFlag : true\r\n\t\t\t});\r\n\t\t\tthis.restartAnimation();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.state.restartFlag && !this.props.restartFlag) {\r\n\t\t\tthis.setState({\r\n\t\t\t\trestartFlag : false\r\n\t\t\t});\r\n\t\t\tthis.restartAnimation();\r\n\t\t}\r\n\t}\r\n\t\r\n\trestartAnimation() {\r\n\t\tlet progressBar = document.getElementById(\"progressBar\");\r\n\t\tlet oldWrapper = document.getElementById(\"wrapper\");\r\n\t\tlet RightSpin = document.getElementById(\"right-spin\");\r\n\t\tlet LeftSpin = document.getElementById(\"left-spin\");\r\n\t\toldWrapper.parentElement.removeChild(oldWrapper);\r\n\t\t\r\n\t\tprogressBar.appendChild(oldWrapper);\r\n\t\tlet newWrapper = document.getElementById(\"wrapper\");\r\n\t\tnewWrapper.appendChild(LeftSpin);\r\n\t\tnewWrapper.appendChild(RightSpin);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tlet cssLeftSpin = {\r\n\t\t\tanimationDuration : this.props.countDownTime+'s',\r\n\t\t\tanimationPlayState : this.props.progressBarEnabled\r\n\t\t};\r\n\t\tlet cssRightSpin = {\r\n\t\t\tanimationDuration : this.props.countDownTime/2+'s',\r\n\t\t\tanimationDelay : this.props.countDownTime/2+'s',\r\n\t\t\tanimationPlayState : this.props.progressBarEnabled\r\n\t\t};\r\n\t\tlet cssWrapper = {\r\n\t\t\tanimationDelay : this.props.countDownTime/2+'s',\r\n\t\t\tanimationPlayState : this.props.progressBarEnabled\r\n\t\t};\r\n\t\tlet cssCircularProgressBar = {\r\n\t\t\ttransform : 'scale('+this.props.progressBarSize+')'\r\n\t\t};\t\t\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div id=\"progressBar\" className=\"CircularProgressBar\" style={cssCircularProgressBar}>\r\n\t\t\t\t<div className=\"start-gap\" part=\"left\" />\r\n\t\t\t\t<div className=\"start-gap\" part=\"right\" />\r\n\t\t\t\t<div className=\"circle-background\" />\r\n\t\t\t\t<div id=\"wrapper\" className=\"wrapper\" style={cssWrapper}>\r\n\t\t\t\t\t<div id=\"right-spin\" className=\"circle right-spin\" style={cssRightSpin} />\r\n\t\t\t\t\t<div id=\"left-spin\" className=\"circle left-spin\" style={cssLeftSpin} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CircularProgressBar;","import React from 'react';\r\n\r\nclass Timer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tseconds : this.props.seconds,\r\n\t\t\tminutes : this.props.minutes,\r\n\t\t\ttimerEnabled : false,\r\n\t\t\trestartFlag : this.props.restartFlag\r\n\t\t};\r\n\t\tthis.timerIntervalID = 0;\r\n\t\tthis.toggleTimer = this.toggleTimer.bind(this);\r\n\t\tthis.restartTimer = this.restartTimer.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidUpdate() {\r\n\t\tif(this.props.timerEnabled && !this.state.timerEnabled) {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttimerEnabled : true\r\n\t\t\t});\r\n\t\t\tthis.toggleTimer(true);\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.props.timerEnabled && this.state.timerEnabled) {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttimerEnabled : false\r\n\t\t\t});\r\n\t\t\tthis.toggleTimer(false);\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.state.restartFlag && this.props.restartFlag) {\r\n\t\t\tthis.setState({\r\n\t\t\t\trestartFlag : true\r\n\t\t\t});\r\n\t\t\tthis.restartTimer();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.state.restartFlag && !this.props.restartFlag) {\r\n\t\t\tthis.setState({\r\n\t\t\t\trestartFlag : false\r\n\t\t\t});\r\n\t\t\tthis.restartTimer();\r\n\t\t}\r\n\t}\r\n\t\r\n\trestartTimer() {\r\n\t\tthis.setState({\r\n\t\t\tseconds : this.props.seconds,\r\n\t\t\tminutes : this.props.minutes\r\n\t\t});\r\n\t}\r\n\t\r\n\ttoggleTimer(startTimer) {\r\n\t\tif(startTimer) {\r\n\t\t\tthis.timerIntervalID = setInterval(() => {\r\n\t\t\t\tlet minutes = this.state.minutes;\r\n\t\t\t\tlet seconds = this.state.seconds - 1;\r\n\t\t\t\tif(seconds < 0) {\r\n\t\t\t\t\tseconds = 59;\r\n\t\t\t\t\tminutes--;\r\n\t\t\t\t}\r\n\t\t\t\tif(minutes < 0) {\r\n\t\t\t\t\tconsole.log(\"stop!!!\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tminutes : minutes,\r\n\t\t\t\t\tseconds : seconds\r\n\t\t\t\t});\r\n\t\t\t},1000);\r\n\t\t} else {\r\n\t\t\tclearInterval(this.timerIntervalID);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\t\r\n\t\tlet time = \"\";\r\n\t\tif(this.state.minutes < 10) time = \"0\" + this.state.minutes;\r\n\t\telse time = this.state.minutes;\r\n\t\ttime += \":\";\r\n\t\tif(this.state.seconds < 10) time += \"0\" + this.state.seconds;\r\n\t\telse time += this.state.seconds;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"Timer\">\r\n\t\t\t\t<div className=\"display\">\r\n\t\t\t\t\t{time}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Timer;","import React from 'react';\nimport './App.css';\nimport CircularProgressBar from './CircularProgressBar.js';\nimport Timer from './Timer.js';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttimerEnabled : false,\n\t\t\tminutes : 3,\n\t\t\tseconds : 0,\n\t\t\tprogressBarEnabled : \"paused\",\n\t\t\t// When restartFlag changes value, the app restarts\n\t\t\trestartFlag : false\n\t\t};\n\t\tthis.timerEnabledToggle = this.timerEnabledToggle.bind(this);\n\t\tthis.timerReset = this.timerReset.bind(this);\n\t}\n\t\n\ttimerReset() {\n\t\tif(this.state.restartFlag) {\n\t\t\tthis.setState({\n\t\t\t\trestartFlag : false\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\trestartFlag : true\n\t\t\t});\n\t\t}\n\t}\n\t\n\ttimerEnabledToggle(e) {\n\t\tif(this.state.timerEnabled) {\n\t\t\tthis.setState({\n\t\t\t\ttimerEnabled : false,\n\t\t\t\tprogressBarEnabled : \"paused\"\n\t\t\t});\n\t\t\te.target.classList.remove(\"fa-pause\");\n\t\t\te.target.classList.add(\"fa-play\");\n\t\t\t\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttimerEnabled : true,\n\t\t\t\tprogressBarEnabled : \"running\"\n\t\t\t});\n\t\t\te.target.classList.remove(\"fa-play\");\n\t\t\te.target.classList.add(\"fa-pause\");\n\t\t}\n\t}\n\n\trender() {\n\t\tlet totalSeconds = this.state.minutes * 60;\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"timer-container\">\n\t\t\t\t\t<Timer \n\t\t\t\t\t\ttimerEnabled={this.state.timerEnabled}\n\t\t\t\t\t\tminutes={this.state.minutes}\n\t\t\t\t\t\tseconds={this.state.seconds}\n\t\t\t\t\t\trestartFlag={this.state.restartFlag}\n\t\t\t\t\t/>\n\t\t\t\t\t<CircularProgressBar\n\t\t\t\t\t\trestartFlag={this.state.restartFlag}\n\t\t\t\t\t\tcountDownTime={totalSeconds}\n\t\t\t\t\t\tprogressBarEnabled={this.state.progressBarEnabled}\n\t\t\t\t\t\tprogressBarSize={0.7} \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"control-container\">\n\t\t\t\t\t<i\n\t\t\t\t\t\tonClick={this.timerEnabledToggle}\n\t\t\t\t\t\tclassName=\"button fa fa-play\"\n\t\t\t\t\t/>\n\t\t\t\t\t<i\n\t\t\t\t\t\tonClick={this.timerReset}\n\t\t\t\t\t\tclassName=\"button fa fa-refresh\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}